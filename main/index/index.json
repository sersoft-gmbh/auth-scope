{"includedArchiveIdentifiers":["AuthScope"],"schemaVersion":{"major":0,"minor":1,"patch":2},"interfaceLanguages":{"swift":[{"type":"module","path":"\/documentation","title":"Documentation","children":[{"children":[{"type":"groupMarker","title":"Protocols"},{"type":"protocol","title":"AccessRangeProtocol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/authscope\/accessrangeprotocol\/init(validating:)","type":"init","title":"init(validating: some StringProtocol) throws","children":[{"title":"AccessRangeProtocol Implementations","children":[{"type":"init","title":"init(validating: some StringProtocol) throws","path":"\/documentation\/authscope\/accessrangeprotocol\/init(validating:)-9g808"}],"type":"groupMarker"}]}],"path":"\/documentation\/authscope\/accessrangeprotocol"},{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"InvalidAccessRangeError","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let accessRangeType: any Any.Type","path":"\/documentation\/authscope\/invalidaccessrangeerror\/accessrangetype","type":"property"},{"title":"var debugDescription: String","path":"\/documentation\/authscope\/invalidaccessrangeerror\/debugdescription","type":"property"},{"title":"var description: String","path":"\/documentation\/authscope\/invalidaccessrangeerror\/description","type":"property"},{"title":"let rawValue: String","path":"\/documentation\/authscope\/invalidaccessrangeerror\/rawvalue","type":"property"}],"path":"\/documentation\/authscope\/invalidaccessrangeerror"},{"type":"struct","title":"Scope","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/authscope\/scope\/init()","type":"init","title":"init()"},{"path":"\/documentation\/authscope\/scope\/init(accessranges:)-639db","type":"init","title":"init(accessRanges: Set<AccessRange>)"},{"path":"\/documentation\/authscope\/scope\/init(accessranges:)-85vzj","type":"init","title":"init(accessRanges: AccessRange...)"},{"path":"\/documentation\/authscope\/scope\/init(accessranges:)-887z6","type":"init","title":"init(accessRanges: some Sequence<AccessRange>)"},{"path":"\/documentation\/authscope\/scope\/init(scopestring:)","type":"init","title":"init(scopeString: some StringProtocol) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/authscope\/scope\/containsallregex","type":"property","title":"var containsAllRegex: Regex<Substring>"},{"path":"\/documentation\/authscope\/scope\/containsallregexpattern","type":"property","title":"var containsAllRegexPattern: String"},{"path":"\/documentation\/authscope\/scope\/containsanyregex","type":"property","title":"var containsAnyRegex: Regex<Substring>"},{"path":"\/documentation\/authscope\/scope\/containsanyregexpattern","type":"property","title":"var containsAnyRegexPattern: String"},{"path":"\/documentation\/authscope\/scope\/exactmatchregex","type":"property","title":"var exactMatchRegex: Regex<Substring>"},{"path":"\/documentation\/authscope\/scope\/exactmatchregexpattern","type":"property","title":"var exactMatchRegexPattern: String"},{"path":"\/documentation\/authscope\/scope\/scopestring","type":"property","title":"var scopeString: String"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/authscope\/scope\/filter(_:)","type":"method","title":"func filter((AccessRange) throws -> Bool) rethrows -> Scope<AccessRange>"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/authscope\/scope\/all","type":"property","title":"static var all: Scope<AccessRange>"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/authscope\/scope\/collection-implementations","children":[{"title":"Structures","type":"groupMarker"},{"title":"Scope.Index","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/authscope\/scope\/index\/_(_:_:)","title":"static func < (Scope<AccessRange>.Index, Scope<AccessRange>.Index) -> Bool"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op","path":"\/documentation\/authscope\/scope\/index\/'...(_:)-1ammh"},{"title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op","path":"\/documentation\/authscope\/scope\/index\/'...(_:)-6xcce"},{"title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op","path":"\/documentation\/authscope\/scope\/index\/'...(_:_:)"},{"title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op","path":"\/documentation\/authscope\/scope\/index\/'.._(_:)"},{"title":"static func ..< (Self, Self) -> Range<Self>","type":"op","path":"\/documentation\/authscope\/scope\/index\/'.._(_:_:)"},{"title":"static func > (Self, Self) -> Bool","type":"op","path":"\/documentation\/authscope\/scope\/index\/_(_:_:)-2jelz"},{"title":"static func >= (Self, Self) -> Bool","type":"op","path":"\/documentation\/authscope\/scope\/index\/_=(_:_:)-1twsd"},{"title":"static func <= (Self, Self) -> Bool","type":"op","path":"\/documentation\/authscope\/scope\/index\/_=(_:_:)-3ptn8"}],"path":"\/documentation\/authscope\/scope\/index\/comparable-implementations","title":"Comparable Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/authscope\/scope\/index\/!=(_:_:)"}],"path":"\/documentation\/authscope\/scope\/index\/equatable-implementations","title":"Equatable Implementations"}],"type":"struct","path":"\/documentation\/authscope\/scope\/index"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var count: Int","type":"property","path":"\/documentation\/authscope\/scope\/count"},{"title":"var endIndex: Scope<AccessRange>.Index","type":"property","path":"\/documentation\/authscope\/scope\/endindex"},{"title":"var first: Self.Element?","type":"property","path":"\/documentation\/authscope\/scope\/first"},{"title":"var indices: DefaultIndices<Self>","type":"property","path":"\/documentation\/authscope\/scope\/indices"},{"title":"var isEmpty: Bool","type":"property","path":"\/documentation\/authscope\/scope\/isempty"},{"title":"var startIndex: Scope<AccessRange>.Index","type":"property","path":"\/documentation\/authscope\/scope\/startindex"},{"title":"var underestimatedCount: Int","type":"property","path":"\/documentation\/authscope\/scope\/underestimatedcount"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method","path":"\/documentation\/authscope\/scope\/distance(from:to:)"},{"title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method","path":"\/documentation\/authscope\/scope\/drop(while:)"},{"title":"func dropFirst(Int) -> Self.SubSequence","type":"method","path":"\/documentation\/authscope\/scope\/dropfirst(_:)"},{"title":"func dropLast(Int) -> Self.SubSequence","type":"method","path":"\/documentation\/authscope\/scope\/droplast(_:)"},{"title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method","path":"\/documentation\/authscope\/scope\/firstindex(of:)"},{"title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method","path":"\/documentation\/authscope\/scope\/firstindex(where:)"},{"title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method","path":"\/documentation\/authscope\/scope\/firstrange(of:)"},{"title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method","path":"\/documentation\/authscope\/scope\/formindex(_:offsetby:)"},{"title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method","path":"\/documentation\/authscope\/scope\/formindex(_:offsetby:limitedby:)"},{"title":"func formIndex(after: inout Self.Index)","type":"method","path":"\/documentation\/authscope\/scope\/formindex(after:)"},{"title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method","path":"\/documentation\/authscope\/scope\/index(_:offsetby:)"},{"title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method","path":"\/documentation\/authscope\/scope\/index(_:offsetby:limitedby:)"},{"title":"func index(after: Scope<AccessRange>.Index) -> Scope<AccessRange>.Index","type":"method","path":"\/documentation\/authscope\/scope\/index(after:)"},{"title":"func index(of: Self.Element) -> Self.Index?","type":"method","path":"\/documentation\/authscope\/scope\/index(of:)","deprecated":true},{"title":"func indices(of: Self.Element) -> RangeSet<Self.Index>","type":"method","path":"\/documentation\/authscope\/scope\/indices(of:)"},{"title":"func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>","type":"method","path":"\/documentation\/authscope\/scope\/indices(where:)"},{"title":"func makeIterator() -> IndexingIterator<Self>","type":"method","path":"\/documentation\/authscope\/scope\/makeiterator()"},{"title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method","path":"\/documentation\/authscope\/scope\/map(_:)-15c2i"},{"title":"func prefix(Int) -> Self.SubSequence","type":"method","path":"\/documentation\/authscope\/scope\/prefix(_:)"},{"title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method","path":"\/documentation\/authscope\/scope\/prefix(through:)"},{"title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method","path":"\/documentation\/authscope\/scope\/prefix(upto:)"},{"title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method","path":"\/documentation\/authscope\/scope\/prefix(while:)"},{"title":"func randomElement() -> Self.Element?","type":"method","path":"\/documentation\/authscope\/scope\/randomelement()"},{"title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method","path":"\/documentation\/authscope\/scope\/randomelement(using:)"},{"title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method","path":"\/documentation\/authscope\/scope\/ranges(of:)"},{"title":"func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>","type":"method","path":"\/documentation\/authscope\/scope\/removingsubranges(_:)"},{"title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method","path":"\/documentation\/authscope\/scope\/split(maxsplits:omittingemptysubsequences:whereseparator:)"},{"title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method","path":"\/documentation\/authscope\/scope\/split(separator:maxsplits:omittingemptysubsequences:)"},{"title":"func suffix(Int) -> Self.SubSequence","type":"method","path":"\/documentation\/authscope\/scope\/suffix(_:)"},{"title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method","path":"\/documentation\/authscope\/scope\/suffix(from:)"},{"title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method","path":"\/documentation\/authscope\/scope\/trimmingprefix(_:)"},{"title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method","path":"\/documentation\/authscope\/scope\/trimmingprefix(while:)"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(Scope<AccessRange>.Index) -> Scope<AccessRange>.Element","type":"subscript","path":"\/documentation\/authscope\/scope\/subscript(_:)"}],"type":"symbol","title":"Collection Implementations"},{"path":"\/documentation\/authscope\/scope\/customdebugstringconvertible-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/authscope\/scope\/debugdescription","title":"var debugDescription: String"}],"type":"symbol","title":"CustomDebugStringConvertible Implementations"},{"path":"\/documentation\/authscope\/scope\/customstringconvertible-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/authscope\/scope\/description","title":"var description: String","type":"property"}],"type":"symbol","title":"CustomStringConvertible Implementations"},{"path":"\/documentation\/authscope\/scope\/decodable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/authscope\/scope\/init(from:)","type":"init"}],"type":"symbol","title":"Decodable Implementations"},{"path":"\/documentation\/authscope\/scope\/encodable-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/authscope\/scope\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"type":"symbol","title":"Encodable Implementations"},{"path":"\/documentation\/authscope\/scope\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/authscope\/scope\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/authscope\/scope\/expressiblebyarrayliteral-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(arrayLiteral: Scope<AccessRange>.ArrayLiteralElement...)","path":"\/documentation\/authscope\/scope\/init(arrayliteral:)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"title":"Scope.ArrayLiteralElement","path":"\/documentation\/authscope\/scope\/arrayliteralelement","type":"typealias"}],"type":"symbol","title":"ExpressibleByArrayLiteral Implementations"},{"path":"\/documentation\/authscope\/scope\/sequence-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/authscope\/scope\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/authscope\/scope\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/authscope\/scope\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/authscope\/scope\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/authscope\/scope\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/authscope\/scope\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/authscope\/scope\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/authscope\/scope\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/authscope\/scope\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/authscope\/scope\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/authscope\/scope\/flatmap(_:)-3zt15","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"deprecated":true,"path":"\/documentation\/authscope\/scope\/flatmap(_:)-6zrmt","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/authscope\/scope\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/authscope\/scope\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/authscope\/scope\/joined(separator:)-6zgtz","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/authscope\/scope\/joined(separator:)-7cg2u","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/authscope\/scope\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/authscope\/scope\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/authscope\/scope\/map(_:)-9z43b","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/authscope\/scope\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/authscope\/scope\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/authscope\/scope\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/authscope\/scope\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/authscope\/scope\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/authscope\/scope\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/authscope\/scope\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/authscope\/scope\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/authscope\/scope\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/authscope\/scope\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/authscope\/scope\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/authscope\/scope\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/authscope\/scope\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/authscope\/scope\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/authscope\/scope\/element","title":"Scope.Element","type":"typealias"}],"type":"symbol","title":"Sequence Implementations"},{"path":"\/documentation\/authscope\/scope\/setalgebra-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init<S>(S)","type":"init","path":"\/documentation\/authscope\/scope\/init(_:)"},{"title":"init(arrayLiteral: Self.Element...)","type":"init","path":"\/documentation\/authscope\/scope\/init(arrayliteral:)-4sqa"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func formIntersection(Scope<AccessRange>)","type":"method","path":"\/documentation\/authscope\/scope\/formintersection(_:)"},{"title":"func formSymmetricDifference(Scope<AccessRange>)","type":"method","path":"\/documentation\/authscope\/scope\/formsymmetricdifference(_:)"},{"title":"func formUnion(Scope<AccessRange>)","type":"method","path":"\/documentation\/authscope\/scope\/formunion(_:)"},{"title":"func insert(Scope<AccessRange>.Element) -> (inserted: Bool, memberAfterInsert: Scope<AccessRange>.Element)","type":"method","path":"\/documentation\/authscope\/scope\/insert(_:)"},{"title":"func intersection(Scope<AccessRange>) -> Scope<AccessRange>","type":"method","path":"\/documentation\/authscope\/scope\/intersection(_:)"},{"title":"func isDisjoint(with: Self) -> Bool","type":"method","path":"\/documentation\/authscope\/scope\/isdisjoint(with:)"},{"title":"func isStrictSubset(of: Self) -> Bool","type":"method","path":"\/documentation\/authscope\/scope\/isstrictsubset(of:)"},{"title":"func isStrictSuperset(of: Self) -> Bool","type":"method","path":"\/documentation\/authscope\/scope\/isstrictsuperset(of:)"},{"title":"func isSubset(of: Self) -> Bool","type":"method","path":"\/documentation\/authscope\/scope\/issubset(of:)"},{"title":"func isSuperset(of: Self) -> Bool","type":"method","path":"\/documentation\/authscope\/scope\/issuperset(of:)"},{"title":"func remove(Scope<AccessRange>.Element) -> Scope<AccessRange>.Element?","type":"method","path":"\/documentation\/authscope\/scope\/remove(_:)"},{"title":"func subtract(Self)","type":"method","path":"\/documentation\/authscope\/scope\/subtract(_:)"},{"title":"func subtracting(Self) -> Self","type":"method","path":"\/documentation\/authscope\/scope\/subtracting(_:)"},{"title":"func symmetricDifference(Scope<AccessRange>) -> Scope<AccessRange>","type":"method","path":"\/documentation\/authscope\/scope\/symmetricdifference(_:)"},{"title":"func union(Scope<AccessRange>) -> Scope<AccessRange>","type":"method","path":"\/documentation\/authscope\/scope\/union(_:)"},{"title":"func update(with: Scope<AccessRange>.Element) -> Scope<AccessRange>.Element?","type":"method","path":"\/documentation\/authscope\/scope\/update(with:)"}],"type":"symbol","title":"SetAlgebra Implementations"}],"path":"\/documentation\/authscope\/scope"}],"type":"module","path":"\/documentation\/authscope","title":"AuthScope"}]}]}}