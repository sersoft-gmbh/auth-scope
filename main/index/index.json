{"schemaVersion":{"minor":1,"patch":2,"major":0},"includedArchiveIdentifiers":["AuthScope"],"interfaceLanguages":{"swift":[{"title":"Documentation","children":[{"path":"\/documentation\/authscope","type":"module","title":"AuthScope","children":[{"type":"groupMarker","title":"Protocols"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","children":[{"title":"AccessRangeProtocol Implementations","children":[{"title":"init(validating: some StringProtocol) throws","type":"init","path":"\/documentation\/authscope\/accessrangeprotocol\/init(validating:)-9g808"}],"type":"groupMarker"}],"title":"init(validating: some StringProtocol) throws","path":"\/documentation\/authscope\/accessrangeprotocol\/init(validating:)"}],"type":"protocol","title":"AccessRangeProtocol","path":"\/documentation\/authscope\/accessrangeprotocol"},{"type":"groupMarker","title":"Structures"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/authscope\/invalidaccessrangeerror\/accessrangetype","title":"let accessRangeType: any Any.Type"},{"type":"property","path":"\/documentation\/authscope\/invalidaccessrangeerror\/debugdescription","title":"var debugDescription: String"},{"type":"property","path":"\/documentation\/authscope\/invalidaccessrangeerror\/description","title":"var description: String"},{"type":"property","path":"\/documentation\/authscope\/invalidaccessrangeerror\/rawvalue","title":"let rawValue: String"}],"type":"struct","title":"InvalidAccessRangeError","path":"\/documentation\/authscope\/invalidaccessrangeerror"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/authscope\/scope\/init()","type":"init"},{"title":"init(accessRanges: Set<AccessRange>)","path":"\/documentation\/authscope\/scope\/init(accessranges:)-639db","type":"init"},{"title":"init(accessRanges: AccessRange...)","path":"\/documentation\/authscope\/scope\/init(accessranges:)-85vzj","type":"init"},{"title":"init(accessRanges: some Sequence<AccessRange>)","path":"\/documentation\/authscope\/scope\/init(accessranges:)-887z6","type":"init"},{"title":"init(scopeString: some StringProtocol) throws","path":"\/documentation\/authscope\/scope\/init(scopestring:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var containsAllRegex: Regex<Substring>","path":"\/documentation\/authscope\/scope\/containsallregex","type":"property"},{"title":"var containsAllRegexPattern: String","path":"\/documentation\/authscope\/scope\/containsallregexpattern","type":"property"},{"title":"var containsAnyRegex: Regex<Substring>","path":"\/documentation\/authscope\/scope\/containsanyregex","type":"property"},{"title":"var containsAnyRegexPattern: String","path":"\/documentation\/authscope\/scope\/containsanyregexpattern","type":"property"},{"title":"var exactMatchRegex: Regex<Substring>","path":"\/documentation\/authscope\/scope\/exactmatchregex","type":"property"},{"title":"var exactMatchRegexPattern: String","path":"\/documentation\/authscope\/scope\/exactmatchregexpattern","type":"property"},{"title":"var scopeString: String","path":"\/documentation\/authscope\/scope\/scopestring","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func filter((AccessRange) throws -> Bool) rethrows -> Scope<AccessRange>","path":"\/documentation\/authscope\/scope\/filter(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var all: Scope<AccessRange>","path":"\/documentation\/authscope\/scope\/all","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Collection Implementations","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"Scope.Index","path":"\/documentation\/authscope\/scope\/index","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func < (Scope<AccessRange>.Index, Scope<AccessRange>.Index) -> Bool","path":"\/documentation\/authscope\/scope\/index\/_(_:_:)","type":"op"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Comparable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/authscope\/scope\/index\/'...(_:)-1ammh","type":"op","title":"static func ... (Self) -> PartialRangeFrom<Self>"},{"path":"\/documentation\/authscope\/scope\/index\/'...(_:)-6xcce","type":"op","title":"static func ... (Self) -> PartialRangeThrough<Self>"},{"path":"\/documentation\/authscope\/scope\/index\/'...(_:_:)","type":"op","title":"static func ... (Self, Self) -> ClosedRange<Self>"},{"path":"\/documentation\/authscope\/scope\/index\/'.._(_:)","type":"op","title":"static func ..< (Self) -> PartialRangeUpTo<Self>"},{"path":"\/documentation\/authscope\/scope\/index\/'.._(_:_:)","type":"op","title":"static func ..< (Self, Self) -> Range<Self>"},{"path":"\/documentation\/authscope\/scope\/index\/_(_:_:)-2jelz","type":"op","title":"static func > (Self, Self) -> Bool"},{"path":"\/documentation\/authscope\/scope\/index\/_=(_:_:)-1twsd","type":"op","title":"static func >= (Self, Self) -> Bool"},{"path":"\/documentation\/authscope\/scope\/index\/_=(_:_:)-3ptn8","type":"op","title":"static func <= (Self, Self) -> Bool"}],"path":"\/documentation\/authscope\/scope\/index\/comparable-implementations","type":"symbol"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/authscope\/scope\/index\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/authscope\/scope\/index\/equatable-implementations","type":"symbol"}]},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var count: Int","path":"\/documentation\/authscope\/scope\/count"},{"type":"property","title":"var endIndex: Scope<AccessRange>.Index","path":"\/documentation\/authscope\/scope\/endindex"},{"type":"property","title":"var first: Self.Element?","path":"\/documentation\/authscope\/scope\/first"},{"type":"property","title":"var indices: DefaultIndices<Self>","path":"\/documentation\/authscope\/scope\/indices"},{"type":"property","title":"var isEmpty: Bool","path":"\/documentation\/authscope\/scope\/isempty"},{"type":"property","title":"var startIndex: Scope<AccessRange>.Index","path":"\/documentation\/authscope\/scope\/startindex"},{"type":"property","title":"var underestimatedCount: Int","path":"\/documentation\/authscope\/scope\/underestimatedcount"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func distance(from: Self.Index, to: Self.Index) -> Int","path":"\/documentation\/authscope\/scope\/distance(from:to:)"},{"type":"method","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","path":"\/documentation\/authscope\/scope\/drop(while:)"},{"type":"method","title":"func dropFirst(Int) -> Self.SubSequence","path":"\/documentation\/authscope\/scope\/dropfirst(_:)"},{"type":"method","title":"func dropLast(Int) -> Self.SubSequence","path":"\/documentation\/authscope\/scope\/droplast(_:)"},{"type":"method","title":"func firstIndex(of: Self.Element) -> Self.Index?","path":"\/documentation\/authscope\/scope\/firstindex(of:)"},{"type":"method","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","path":"\/documentation\/authscope\/scope\/firstindex(where:)"},{"type":"method","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","path":"\/documentation\/authscope\/scope\/firstrange(of:)"},{"type":"method","title":"func formIndex(inout Self.Index, offsetBy: Int)","path":"\/documentation\/authscope\/scope\/formindex(_:offsetby:)"},{"type":"method","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","path":"\/documentation\/authscope\/scope\/formindex(_:offsetby:limitedby:)"},{"type":"method","title":"func formIndex(after: inout Self.Index)","path":"\/documentation\/authscope\/scope\/formindex(after:)"},{"type":"method","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","path":"\/documentation\/authscope\/scope\/index(_:offsetby:)"},{"type":"method","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","path":"\/documentation\/authscope\/scope\/index(_:offsetby:limitedby:)"},{"type":"method","title":"func index(after: Scope<AccessRange>.Index) -> Scope<AccessRange>.Index","path":"\/documentation\/authscope\/scope\/index(after:)"},{"type":"method","title":"func index(of: Self.Element) -> Self.Index?","path":"\/documentation\/authscope\/scope\/index(of:)","deprecated":true},{"type":"method","title":"func indices(of: Self.Element) -> RangeSet<Self.Index>","path":"\/documentation\/authscope\/scope\/indices(of:)"},{"type":"method","title":"func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>","path":"\/documentation\/authscope\/scope\/indices(where:)"},{"type":"method","title":"func makeIterator() -> IndexingIterator<Self>","path":"\/documentation\/authscope\/scope\/makeiterator()"},{"type":"method","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","path":"\/documentation\/authscope\/scope\/map(_:)-15c2i"},{"type":"method","title":"func prefix(Int) -> Self.SubSequence","path":"\/documentation\/authscope\/scope\/prefix(_:)"},{"type":"method","title":"func prefix(through: Self.Index) -> Self.SubSequence","path":"\/documentation\/authscope\/scope\/prefix(through:)"},{"type":"method","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","path":"\/documentation\/authscope\/scope\/prefix(upto:)"},{"type":"method","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","path":"\/documentation\/authscope\/scope\/prefix(while:)"},{"type":"method","title":"func randomElement() -> Self.Element?","path":"\/documentation\/authscope\/scope\/randomelement()"},{"type":"method","title":"func randomElement<T>(using: inout T) -> Self.Element?","path":"\/documentation\/authscope\/scope\/randomelement(using:)"},{"type":"method","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","path":"\/documentation\/authscope\/scope\/ranges(of:)"},{"type":"method","title":"func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>","path":"\/documentation\/authscope\/scope\/removingsubranges(_:)"},{"type":"method","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","path":"\/documentation\/authscope\/scope\/split(maxsplits:omittingemptysubsequences:whereseparator:)"},{"type":"method","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","path":"\/documentation\/authscope\/scope\/split(separator:maxsplits:omittingemptysubsequences:)"},{"type":"method","title":"func suffix(Int) -> Self.SubSequence","path":"\/documentation\/authscope\/scope\/suffix(_:)"},{"type":"method","title":"func suffix(from: Self.Index) -> Self.SubSequence","path":"\/documentation\/authscope\/scope\/suffix(from:)"},{"type":"method","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","path":"\/documentation\/authscope\/scope\/trimmingprefix(_:)"},{"type":"method","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","path":"\/documentation\/authscope\/scope\/trimmingprefix(while:)"},{"type":"groupMarker","title":"Subscripts"},{"type":"subscript","title":"subscript(Scope<AccessRange>.Index) -> Scope<AccessRange>.Element","path":"\/documentation\/authscope\/scope\/subscript(_:)"}],"path":"\/documentation\/authscope\/scope\/collection-implementations","type":"symbol"},{"title":"CustomDebugStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/authscope\/scope\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/authscope\/scope\/customdebugstringconvertible-implementations","type":"symbol"},{"title":"CustomStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/authscope\/scope\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/authscope\/scope\/customstringconvertible-implementations","type":"symbol"},{"title":"Decodable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/authscope\/scope\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/authscope\/scope\/decodable-implementations","type":"symbol"},{"title":"Encodable Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/authscope\/scope\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"}],"path":"\/documentation\/authscope\/scope\/encodable-implementations","type":"symbol"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/authscope\/scope\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/authscope\/scope\/equatable-implementations","type":"symbol"},{"title":"ExpressibleByArrayLiteral Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/authscope\/scope\/init(arrayliteral:)","title":"init(arrayLiteral: Scope<AccessRange>.ArrayLiteralElement...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/authscope\/scope\/arrayliteralelement","title":"Scope.ArrayLiteralElement","type":"typealias"}],"path":"\/documentation\/authscope\/scope\/expressiblebyarrayliteral-implementations","type":"symbol"},{"title":"Sequence Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var lazy: LazySequence<Self>","path":"\/documentation\/authscope\/scope\/lazy"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","path":"\/documentation\/authscope\/scope\/allsatisfy(_:)"},{"type":"method","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","path":"\/documentation\/authscope\/scope\/compactmap(_:)"},{"type":"method","title":"func contains(Self.Element) -> Bool","path":"\/documentation\/authscope\/scope\/contains(_:)"},{"type":"method","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","path":"\/documentation\/authscope\/scope\/contains(where:)"},{"type":"method","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","path":"\/documentation\/authscope\/scope\/count(where:)"},{"type":"method","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","path":"\/documentation\/authscope\/scope\/elementsequal(_:)"},{"type":"method","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","path":"\/documentation\/authscope\/scope\/elementsequal(_:by:)"},{"type":"method","title":"func enumerated() -> EnumeratedSequence<Self>","path":"\/documentation\/authscope\/scope\/enumerated()"},{"type":"method","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","path":"\/documentation\/authscope\/scope\/first(where:)"},{"type":"method","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","path":"\/documentation\/authscope\/scope\/flatmap(_:)-3zt15"},{"type":"method","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","path":"\/documentation\/authscope\/scope\/flatmap(_:)-6zrmt","deprecated":true},{"type":"method","title":"func forEach((Self.Element) throws -> Void) rethrows","path":"\/documentation\/authscope\/scope\/foreach(_:)"},{"type":"method","title":"func joined() -> FlattenSequence<Self>","path":"\/documentation\/authscope\/scope\/joined()"},{"type":"method","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","path":"\/documentation\/authscope\/scope\/joined(separator:)-6zgtz"},{"type":"method","title":"func joined(separator: String) -> String","path":"\/documentation\/authscope\/scope\/joined(separator:)-7cg2u"},{"type":"method","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","path":"\/documentation\/authscope\/scope\/lexicographicallyprecedes(_:)"},{"type":"method","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","path":"\/documentation\/authscope\/scope\/lexicographicallyprecedes(_:by:)"},{"type":"method","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","path":"\/documentation\/authscope\/scope\/map(_:)-9z43b"},{"type":"method","title":"func max() -> Self.Element?","path":"\/documentation\/authscope\/scope\/max()"},{"type":"method","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","path":"\/documentation\/authscope\/scope\/max(by:)"},{"type":"method","title":"func min() -> Self.Element?","path":"\/documentation\/authscope\/scope\/min()"},{"type":"method","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","path":"\/documentation\/authscope\/scope\/min(by:)"},{"type":"method","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","path":"\/documentation\/authscope\/scope\/reduce(_:_:)"},{"type":"method","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","path":"\/documentation\/authscope\/scope\/reduce(into:_:)"},{"type":"method","title":"func reversed() -> [Self.Element]","path":"\/documentation\/authscope\/scope\/reversed()"},{"type":"method","title":"func shuffled() -> [Self.Element]","path":"\/documentation\/authscope\/scope\/shuffled()"},{"type":"method","title":"func shuffled<T>(using: inout T) -> [Self.Element]","path":"\/documentation\/authscope\/scope\/shuffled(using:)"},{"type":"method","title":"func sorted() -> [Self.Element]","path":"\/documentation\/authscope\/scope\/sorted()"},{"type":"method","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","path":"\/documentation\/authscope\/scope\/sorted(by:)"},{"type":"method","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","path":"\/documentation\/authscope\/scope\/starts(with:)"},{"type":"method","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","path":"\/documentation\/authscope\/scope\/starts(with:by:)"},{"type":"method","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","path":"\/documentation\/authscope\/scope\/withcontiguousstorageifavailable(_:)"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"Scope.Element","path":"\/documentation\/authscope\/scope\/element"}],"path":"\/documentation\/authscope\/scope\/sequence-implementations","type":"symbol"},{"title":"SetAlgebra Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/authscope\/scope\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/authscope\/scope\/init(arrayliteral:)-4sqa","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/authscope\/scope\/formintersection(_:)","title":"func formIntersection(Scope<AccessRange>)","type":"method"},{"path":"\/documentation\/authscope\/scope\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Scope<AccessRange>)","type":"method"},{"path":"\/documentation\/authscope\/scope\/formunion(_:)","title":"func formUnion(Scope<AccessRange>)","type":"method"},{"path":"\/documentation\/authscope\/scope\/insert(_:)","title":"func insert(Scope<AccessRange>.Element) -> (inserted: Bool, memberAfterInsert: Scope<AccessRange>.Element)","type":"method"},{"path":"\/documentation\/authscope\/scope\/intersection(_:)","title":"func intersection(Scope<AccessRange>) -> Scope<AccessRange>","type":"method"},{"path":"\/documentation\/authscope\/scope\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/authscope\/scope\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/authscope\/scope\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/authscope\/scope\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/authscope\/scope\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/authscope\/scope\/remove(_:)","title":"func remove(Scope<AccessRange>.Element) -> Scope<AccessRange>.Element?","type":"method"},{"path":"\/documentation\/authscope\/scope\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/authscope\/scope\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"},{"path":"\/documentation\/authscope\/scope\/symmetricdifference(_:)","title":"func symmetricDifference(Scope<AccessRange>) -> Scope<AccessRange>","type":"method"},{"path":"\/documentation\/authscope\/scope\/union(_:)","title":"func union(Scope<AccessRange>) -> Scope<AccessRange>","type":"method"},{"path":"\/documentation\/authscope\/scope\/update(with:)","title":"func update(with: Scope<AccessRange>.Element) -> Scope<AccessRange>.Element?","type":"method"}],"path":"\/documentation\/authscope\/scope\/setalgebra-implementations","type":"symbol"}],"type":"struct","title":"Scope","path":"\/documentation\/authscope\/scope"}]}],"type":"module","path":"\/documentation"}]}}