{
  "abstract" : [
    {
      "text" : "Returns the elements of the sequence, sorted.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/AuthScope\/documentation\/AuthScope",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/Sequence-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/sorted()"
  },
  "kind" : "symbol",
  "metadata" : {
    "conformance" : {
      "availabilityPrefix" : [
        {
          "text" : "Available when",
          "type" : "text"
        }
      ],
      "conformancePrefix" : [
        {
          "text" : "Conforms when",
          "type" : "text"
        }
      ],
      "constraints" : [
        {
          "code" : "Element",
          "type" : "codeVoice"
        },
        {
          "text" : " conforms to ",
          "type" : "text"
        },
        {
          "code" : "Comparable",
          "type" : "codeVoice"
        },
        {
          "text" : ".",
          "type" : "text"
        }
      ]
    },
    "extendedModule" : "Swift",
    "externalID" : "s:STsSL7ElementRpzrlE6sortedSayABGyF::SYNTHESIZED::s:9AuthScope0B0V",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "sorted"
      },
      {
        "kind" : "text",
        "text" : "() -> ["
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Element"
      },
      {
        "kind" : "text",
        "text" : "]"
      }
    ],
    "modules" : [
      {
        "name" : "AuthScope"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "sorted()"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "sorted"
            },
            {
              "kind" : "text",
              "text" : "() -> ["
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : "]"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A sorted array of the sequence’s elements.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can sort any sequence of elements that conform to the ",
              "type" : "text"
            },
            {
              "code" : "Comparable",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "protocol by calling this method. Elements are sorted in ascending order.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Here’s an example of sorting a list of students’ names. Strings in Swift",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "conform to the ",
              "type" : "text"
            },
            {
              "code" : "Comparable",
              "type" : "codeVoice"
            },
            {
              "text" : " protocol, so the names are sorted in",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "ascending order according to the less-than operator (",
              "type" : "text"
            },
            {
              "code" : "<",
              "type" : "codeVoice"
            },
            {
              "text" : ").",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let students: Set = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]",
            "let sortedStudents = students.sorted()",
            "print(sortedStudents)",
            "\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "To sort the elements of your sequence in descending order, pass the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "greater-than operator (",
              "type" : "text"
            },
            {
              "code" : ">",
              "type" : "codeVoice"
            },
            {
              "text" : ") to the ",
              "type" : "text"
            },
            {
              "code" : "sorted(by:)",
              "type" : "codeVoice"
            },
            {
              "text" : " method.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let descendingStudents = students.sorted(by: >)",
            "print(descendingStudents)",
            "\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The sorting algorithm is not guaranteed to be stable. A stable sort",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "preserves the relative order of elements that compare equal.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "O(",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "n",
                      "type" : "text"
                    }
                  ],
                  "type" : "emphasis"
                },
                {
                  "text" : " log ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "n",
                      "type" : "text"
                    }
                  ],
                  "type" : "emphasis"
                },
                {
                  "text" : "), where ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "n",
                      "type" : "text"
                    }
                  ],
                  "type" : "emphasis"
                },
                {
                  "text" : " is the length of the sequence.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Complexity",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/authscope\/scope\/sorted()"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://AuthScope/documentation/AuthScope": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "AuthScope",
  "type" : "topic",
  "url" : "\/documentation\/authscope"
},
"doc://AuthScope/documentation/AuthScope/Scope": {
  "abstract" : [
    {
      "text" : "A set of access ranges.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Scope"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Scope"
    }
  ],
  "role" : "symbol",
  "title" : "Scope",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope"
},
"doc://AuthScope/documentation/AuthScope/Scope/Sequence-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/Sequence-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Sequence Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/sequence-implementations"
},
"doc://AuthScope/documentation/AuthScope/Scope/sorted()": {
  "abstract" : [
    {
      "text" : "Returns the elements of the sequence, sorted.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Element",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Comparable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sorted"
    },
    {
      "kind" : "text",
      "text" : "() -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Element"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/sorted()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sorted()",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/sorted()"
}
}
}