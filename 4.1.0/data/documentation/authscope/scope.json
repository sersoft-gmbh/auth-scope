{
  "abstract" : [
    {
      "text" : "A set of access ranges.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/AuthScope\/documentation\/AuthScope"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:9AuthScope0B0V",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Scope"
      }
    ],
    "modules" : [
      {
        "name" : "AuthScope"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Scope"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "Scope"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Scope"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "AccessRange"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "AccessRange"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/AccessRangeProtocol",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:9AuthScope19AccessRangeProtocolP",
              "text" : "AccessRangeProtocol"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/AuthScope\/Sl",
        "doc:\/\/AuthScope\/s28CustomDebugStringConvertibleP",
        "doc:\/\/AuthScope\/s23CustomStringConvertibleP",
        "doc:\/\/AuthScope\/Se",
        "doc:\/\/AuthScope\/SE",
        "doc:\/\/AuthScope\/SQ",
        "doc:\/\/AuthScope\/s25ExpressibleByArrayLiteralP",
        "doc:\/\/AuthScope\/SH",
        "doc:\/\/AuthScope\/s8SendableP",
        "doc:\/\/AuthScope\/ST",
        "doc:\/\/AuthScope\/s10SetAlgebraP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/init()",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/init(accessRanges:)-639db",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/init(accessRanges:)-85vzj",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/init(accessRanges:)-887z6",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/init(scopeString:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/containsAllRegex",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/containsAllRegexPattern",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/containsAnyRegex",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/containsAnyRegexPattern",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/exactMatchRegex",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/exactMatchRegexPattern",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/scopeString"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/filter(_:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "identifiers" : [
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/all"
      ],
      "title" : "Type Properties"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/Collection-Implementations",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/CustomDebugStringConvertible-Implementations",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/CustomStringConvertible-Implementations",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/Decodable-Implementations",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/Encodable-Implementations",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/Equatable-Implementations",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/ExpressibleByArrayLiteral-Implementations",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/Sequence-Implementations",
        "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/SetAlgebra-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/authscope\/scope"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://AuthScope/SE": {
  "identifier" : "doc:\/\/AuthScope\/SE",
  "title" : "Swift.Encodable",
  "type" : "unresolvable"
},
"doc://AuthScope/SH": {
  "identifier" : "doc:\/\/AuthScope\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://AuthScope/SQ": {
  "identifier" : "doc:\/\/AuthScope\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://AuthScope/ST": {
  "identifier" : "doc:\/\/AuthScope\/ST",
  "title" : "Swift.Sequence",
  "type" : "unresolvable"
},
"doc://AuthScope/Se": {
  "identifier" : "doc:\/\/AuthScope\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://AuthScope/Sl": {
  "identifier" : "doc:\/\/AuthScope\/Sl",
  "title" : "Swift.Collection",
  "type" : "unresolvable"
},
"doc://AuthScope/documentation/AuthScope": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "AuthScope",
  "type" : "topic",
  "url" : "\/documentation\/authscope"
},
"doc://AuthScope/documentation/AuthScope/AccessRangeProtocol": {
  "abstract" : [
    {
      "text" : "Describes an access range type. Typically an enum.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AccessRangeProtocol"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/AccessRangeProtocol",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AccessRangeProtocol"
    }
  ],
  "role" : "symbol",
  "title" : "AccessRangeProtocol",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/accessrangeprotocol"
},
"doc://AuthScope/documentation/AuthScope/Scope": {
  "abstract" : [
    {
      "text" : "A set of access ranges.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Scope"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Scope"
    }
  ],
  "role" : "symbol",
  "title" : "Scope",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope"
},
"doc://AuthScope/documentation/AuthScope/Scope/Collection-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/Collection-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Collection Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/collection-implementations"
},
"doc://AuthScope/documentation/AuthScope/Scope/CustomDebugStringConvertible-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/CustomDebugStringConvertible-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "CustomDebugStringConvertible Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/customdebugstringconvertible-implementations"
},
"doc://AuthScope/documentation/AuthScope/Scope/CustomStringConvertible-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/CustomStringConvertible-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "CustomStringConvertible Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/customstringconvertible-implementations"
},
"doc://AuthScope/documentation/AuthScope/Scope/Decodable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/Decodable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Decodable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/decodable-implementations"
},
"doc://AuthScope/documentation/AuthScope/Scope/Encodable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/Encodable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Encodable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/encodable-implementations"
},
"doc://AuthScope/documentation/AuthScope/Scope/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/equatable-implementations"
},
"doc://AuthScope/documentation/AuthScope/Scope/ExpressibleByArrayLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/ExpressibleByArrayLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByArrayLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/expressiblebyarrayliteral-implementations"
},
"doc://AuthScope/documentation/AuthScope/Scope/Sequence-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/Sequence-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Sequence Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/sequence-implementations"
},
"doc://AuthScope/documentation/AuthScope/Scope/SetAlgebra-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/SetAlgebra-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "SetAlgebra Implementations",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/setalgebra-implementations"
},
"doc://AuthScope/documentation/AuthScope/Scope/all": {
  "abstract" : [
    {
      "text" : "Returns a scope with all possible access ranges.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "AccessRange",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "AccessRangeProtocol",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "CaseIterable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "all"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9AuthScope0B0V",
      "text" : "Scope"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "AccessRange"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/all",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "all",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/all"
},
"doc://AuthScope/documentation/AuthScope/Scope/containsAllRegex": {
  "abstract" : [
    {
      "text" : "Returns a regular expression pattern that matches a string that has at least the access ranges in self (but can have more).",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "AccessRange",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "AccessRangeProtocol",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "containsAllRegex"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17_StringProcessing5RegexV",
      "text" : "Regex"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Ss",
      "text" : "Substring"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/containsAllRegex",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "containsAllRegex",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/containsallregex"
},
"doc://AuthScope/documentation/AuthScope/Scope/containsAllRegexPattern": {
  "abstract" : [
    {
      "text" : "Returns a regular expression pattern that matches a string that has at least the access ranges in self (but can have more).",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "AccessRange",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "AccessRangeProtocol",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "containsAllRegexPattern"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/containsAllRegexPattern",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "containsAllRegexPattern",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/containsallregexpattern"
},
"doc://AuthScope/documentation/AuthScope/Scope/containsAnyRegex": {
  "abstract" : [
    {
      "text" : "Returns a regular expression pattern that matches a string that has at least one of access ranges in self (but not all).",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "AccessRange",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "AccessRangeProtocol",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "containsAnyRegex"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17_StringProcessing5RegexV",
      "text" : "Regex"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Ss",
      "text" : "Substring"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/containsAnyRegex",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "containsAnyRegex",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/containsanyregex"
},
"doc://AuthScope/documentation/AuthScope/Scope/containsAnyRegexPattern": {
  "abstract" : [
    {
      "text" : "Returns a regular expression pattern that matches a string that has at least one of access ranges in self (but not all).",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "AccessRange",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "AccessRangeProtocol",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "containsAnyRegexPattern"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/containsAnyRegexPattern",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "containsAnyRegexPattern",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/containsanyregexpattern"
},
"doc://AuthScope/documentation/AuthScope/Scope/exactMatchRegex": {
  "abstract" : [
    {
      "text" : "Returns a regular expression string that matches a string that has exactly the access ranges in self (not more, not less).",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "AccessRange",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "AccessRangeProtocol",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "exactMatchRegex"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:17_StringProcessing5RegexV",
      "text" : "Regex"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Ss",
      "text" : "Substring"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/exactMatchRegex",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "exactMatchRegex",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/exactmatchregex"
},
"doc://AuthScope/documentation/AuthScope/Scope/exactMatchRegexPattern": {
  "abstract" : [
    {
      "text" : "Returns a regular expression pattern that matches a string that has exactly the access ranges in self (not more, not less).",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "AccessRange",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "AccessRangeProtocol",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "exactMatchRegexPattern"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/exactMatchRegexPattern",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "exactMatchRegexPattern",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/exactmatchregexpattern"
},
"doc://AuthScope/documentation/AuthScope/Scope/filter(_:)": {
  "abstract" : [
    {
      "text" : "Filters the scope by calling ",
      "type" : "text"
    },
    {
      "code" : "isIncluded",
      "type" : "codeVoice"
    },
    {
      "text" : " with each contained access range and only adding the ones for which it returns true to the result.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "AccessRange",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "AccessRangeProtocol",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "filter"
    },
    {
      "kind" : "text",
      "text" : "(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "AccessRange"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9AuthScope0B0V",
      "text" : "Scope"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "AccessRange"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/filter(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "filter(_:)",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/filter(_:)"
},
"doc://AuthScope/documentation/AuthScope/Scope/init()": {
  "abstract" : [
    {
      "text" : "Creates a new, empty scope.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/init()"
},
"doc://AuthScope/documentation/AuthScope/Scope/init(accessRanges:)-639db": {
  "abstract" : [
    {
      "text" : "Creates a new scope with the given ",
      "type" : "text"
    },
    {
      "code" : "Swift\/Set",
      "type" : "codeVoice"
    },
    {
      "text" : " of access ranges.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "accessRanges"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "AccessRange"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/init(accessRanges:)-639db",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(accessRanges:)",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/init(accessranges:)-639db"
},
"doc://AuthScope/documentation/AuthScope/Scope/init(accessRanges:)-85vzj": {
  "abstract" : [
    {
      "text" : "Creates a new scope with the given list of access ranges.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "accessRanges"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "AccessRange"
    },
    {
      "kind" : "text",
      "text" : "...)"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/init(accessRanges:)-85vzj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(accessRanges:)",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/init(accessranges:)-85vzj"
},
"doc://AuthScope/documentation/AuthScope/Scope/init(accessRanges:)-887z6": {
  "abstract" : [
    {
      "text" : "Creates a new scope with the given collection of access ranges.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "accessRanges"
    },
    {
      "kind" : "text",
      "text" : ": some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:ST",
      "text" : "Sequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "AccessRange"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/init(accessRanges:)-887z6",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(accessRanges:)",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/init(accessranges:)-887z6"
},
"doc://AuthScope/documentation/AuthScope/Scope/init(scopeString:)": {
  "abstract" : [
    {
      "text" : "Creates a new scope from a given scope string. Throws an error if the string contains invalid access ranges.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "AccessRange",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "AccessRangeProtocol",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "scopeString"
    },
    {
      "kind" : "text",
      "text" : ": some "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sy",
      "text" : "StringProtocol"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/init(scopeString:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(scopeString:)",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/init(scopestring:)"
},
"doc://AuthScope/documentation/AuthScope/Scope/scopeString": {
  "abstract" : [
    {
      "text" : "A string containing all access ranges in self seperated by space.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "AccessRange",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "AccessRangeProtocol",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "scopeString"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/AuthScope\/documentation\/AuthScope\/Scope\/scopeString",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "scopeString",
  "type" : "topic",
  "url" : "\/documentation\/authscope\/scope\/scopestring"
},
"doc://AuthScope/s10SetAlgebraP": {
  "identifier" : "doc:\/\/AuthScope\/s10SetAlgebraP",
  "title" : "Swift.SetAlgebra",
  "type" : "unresolvable"
},
"doc://AuthScope/s23CustomStringConvertibleP": {
  "identifier" : "doc:\/\/AuthScope\/s23CustomStringConvertibleP",
  "title" : "Swift.CustomStringConvertible",
  "type" : "unresolvable"
},
"doc://AuthScope/s25ExpressibleByArrayLiteralP": {
  "identifier" : "doc:\/\/AuthScope\/s25ExpressibleByArrayLiteralP",
  "title" : "Swift.ExpressibleByArrayLiteral",
  "type" : "unresolvable"
},
"doc://AuthScope/s28CustomDebugStringConvertibleP": {
  "identifier" : "doc:\/\/AuthScope\/s28CustomDebugStringConvertibleP",
  "title" : "Swift.CustomDebugStringConvertible",
  "type" : "unresolvable"
},
"doc://AuthScope/s8SendableP": {
  "identifier" : "doc:\/\/AuthScope\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}